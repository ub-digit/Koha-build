#!/usr/bin/perl

use strict;
use warnings;

use CGI qw ( -utf8 );
use C4::Auth qw/check_api_auth/;
use C4::Members;
use C4::Members::Attributes qw( GetBorrowerAttributeValue );
use Koha::Patrons;
use XML::Simple;
use Data::Dumper;                                                        # DEBUG

my $query = new CGI;
binmode STDOUT, ':encoding(UTF-8)';
print "Content-type: text/plain\n\n";

# -------------------------------------------------- #
# in-params are 'user' and 'pass'. They are used as  #
# 'personalnumber' and 'cardnumber', to correspond   #
# with "sister" script auth_booking                  #
# -------------------------------------------------- #
my $cardnumber= $query->url_param('user');
my $personalnumber = $query->url_param('pass');

# -------------------------------------------------- #
# lack of username                                   #
# -------------------------------------------------- #
unless ($cardnumber) {
    print "0\r\n";
    exit 0;
}
# -------------------------------------------------- #
# lack of password                                   #
# -------------------------------------------------- #
unless ($personalnumber) {
    print "0\r\n";
    exit 0;
}

my $patrons = Koha::Patrons->search({cardnumber => $cardnumber});
my $borrower = $patrons->next;


# -------------------------------------------------- #
# wrong cardnumber                                   #
# -------------------------------------------------- #
unless ($borrower) {
    print "0\r\n";
    exit 0;
}

my $borrowernumber   = $borrower->unblessed->{'borrowernumber'};
my $dateexpiry       = $borrower->unblessed->{'dateexpiry'};
my $categorycode     = $borrower->unblessed->{'categorycode'};
my $lost             = $borrower->unblessed->{'lost'};
my $debarredcomment  = $borrower->unblessed->{'debarredcomment'};
my $retval;

# -------------------------------------------------- #
# 'personnummer' might be stored as 10 or 12 digits  #
# -------------------------------------------------- #
my $pnr12 = GetBorrowerAttributeValue($borrowernumber, "PNR12");
my $pnr = GetBorrowerAttributeValue($borrowernumber, "PNR");
my $outfile = '/tmp/auth_offpc.out';                                      # DEBUG
open (OUTFILE, ">$outfile");                                              # DEBUG
my $today = `date +"%Y-%m-%d"`;

# -------------------------------------------------- #
# personalnumber must correspond to either variant   #
# -------------------------------------------------- #
if (!(
        ($pnr12 and (($personalnumber eq $pnr12) or ($personalnumber eq substr($pnr12, 2)))) or
        ($pnr   and (($personalnumber eq $pnr) or (substr($personalnumber, 2) eq $pnr))))) {
    $retval = 0;
}
elsif ($dateexpiry < $today)                               {    $retval = 0; }  # card is expired
elsif ($cardnumber eq $personalnumber )                    {    $retval = 0; }  # card is temporary, not allowing offpc login
elsif ($categorycode !~ m/(EX)|(SR)|(FR)|(UX)|(FX)|(NX)/ ) {    $retval = 0; }  # only listed categories may log in with cardnumber
elsif ($lost==1)                                           {    $retval = 0; }  # card reported lost
elsif ($debarredcomment =~ m/(GU,)|(AV,)/)                 {    $retval = 0; }  # these debarment codes prohibits login
else                                                       {    $retval = 1; }  # you're good to go!
print $retval . "\r\n";                                                         # return value contains "\r\n" since this script mimics auth_only_extern.cgi (sunda...)
# -------------------------------------------------- #                    # DEBUG
# DEBUG                                              #                    # DEBUG
# -------------------------------------------------- #                    # DEBUG
print OUTFILE "borrowernumber :$borrowernumber: \n";                      # DEBUG
print OUTFILE "dateexpiry     :$dateexpiry:     \n";                      # DEBUG
print OUTFILE "today          :$today           \n";                      # DEBUG
print OUTFILE "categorycode   :$categorycode:   \n";                      # DEBUG
print OUTFILE "pnr            :$pnr:            \n";                      # DEBUG
print OUTFILE "debarredcomment:$debarredcomment:\n";                      # DEBUG
print OUTFILE "lost           :$lost:           \n";                      # DEBUG
print OUTFILE "# ----borrower start-------------------------------- #\n"; # DEBUG
print "\nborrowernumber :$borrowernumber:\n";                             # DEBUG
print "dateexpiry     :$dateexpiry:      \n";                             # DEBUG
print "today          :$today:           \n";                             # DEBUG
print "categorycode   :$categorycode:    \n";                             # DEBUG
print "pnr            :$pnr:             \n";                             # DEBUG
print "debarredcomment:$debarredcomment: \n";                             # DEBUG
print "lost           :$lost:            \n";                             # DEBUG
print OUTFILE Dumper($borrower);                                          # DEBUG
close OUTFILE;                                                            # DEBUG
# -------------------------------------------------- #                    # DEBUG
# DEBUG end                                          #                    # DEBUG
# -------------------------------------------------- #                    # DEBUG


exit 0;
