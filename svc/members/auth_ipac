#!/usr/bin/perl

use strict;
use warnings;

use utf8;
use CGI qw ( -utf8 );
use C4::Auth qw/check_api_auth/;
use C4::Members;
use C4::Members::Attributes qw( GetBorrowerAttributeValue );
use Koha::Patrons;
use XML::Simple;

my $query = new CGI;
binmode STDOUT, ':encoding(UTF-8)';

my $cardnumber= $query->url_param('cardnumber');
my $personalnumber = $query->url_param('personalnumber');
my $api_key = $query->url_param('api_key');
my $server_api_key = $ENV{'HTTP_X_KOHA_IPAC_API_KEY'};

my $response_hash = {
    cardnumber => $cardnumber,
    firstname => undef,
    surname => undef,
    print_msg => undef,
    screen_msg => undef
};

# Wrong or missing api key (INVALID_KEY)
if (!$api_key || $api_key ne $server_api_key) {
    $response_hash->{status} = "INVALID_KEY";
    print $query->header(-type => 'text/xml', -status => '403');
    print XMLout($response_hash, NoAttr => 1, RootName => 'response', XMLDecl => 1);
    exit 0;
}

# Missing cardnumber or personalnumber (INVALID_CREDENTIALS)
if (!$cardnumber || !$personalnumber) {
    $response_hash->{status} = "INVALID_CREDENTIALS";
    print $query->header(-type => 'text/xml', -status => '403');
    print XMLout($response_hash, NoAttr => 1, RootName => 'response', XMLDecl => 1);
    exit 0;
}

# Truncate incoming personalnumber to 10 characters, we know it exists at this point
if(length($personalnumber) == 12) {
    $personalnumber = substr($personalnumber, 2);
}

my $patrons = Koha::Patrons->search({cardnumber => $cardnumber});
my $borrower = $patrons->next;

# Borrower not found (INVALID_CREDENTIALS)
if (!$borrower) {
    $response_hash->{status} = "INVALID_CREDENTIALS";
    print $query->header(-type => 'text/xml', -status => '403');
    print XMLout($response_hash, NoAttr => 1, RootName => 'response', XMLDecl => 1);
    exit 0;
}

my $borrowernumber = $borrower->unblessed->{'borrowernumber'};
my $dateexpiry = $borrower->unblessed->{'dateexpiry'};
my $lang = $borrower->unblessed->{'lang'};
my $today = `date +"%Y-%m-%d"`;

my $pnr12 = GetBorrowerAttributeValue($borrowernumber, "PNR12");
my $pnr10 = GetBorrowerAttributeValue($borrowernumber, "PNR");
my $pnr12_valid = 0;
my $pnr10_valid = 0;

if($pnr12 && $personalnumber eq substr($pnr12, 2)) {
    $pnr12_valid = 1;
} elsif($pnr10 && $personalnumber eq $pnr10) {
    $pnr10_valid = 1;
}

# Personalnumber not matching borrower (INVALID_CREDENTIALS)
if (!$pnr12_valid && !$pnr10_valid) {
    $response_hash->{status} = "INVALID_CREDENTIALS";
    print $query->header(-type => 'text/xml', -status => '403');
    print XMLout($response_hash, NoAttr => 1, RootName => 'response', XMLDecl => 1);
    exit 0;
}

# All is well, we have the correct user

my $screen_msg = "";
# Borrower expired, add screen_msg
if ($dateexpiry lt $today) {
    if ($lang eq "en") {
        $screen_msg = "Patron has expired.";
    } else {
        $screen_msg = "Låntagarens konto är utgånget.";
    }
}

my $print_msg = GetBorrowerAttributeValue($borrowernumber, "PRINT");
my $firstname = $borrower->unblessed->{'firstname'};
my $surname = $borrower->unblessed->{'surname'};

my $response = {
    status => "OK",
    cardnumber => $cardnumber,
    firstname => $firstname,
    surname => $surname,
    print_msg => $print_msg,
    screen_msg => $screen_msg
};

print $query->header(-type => 'text/xml; charset: UTF-8', -status => '200');
print XMLout($response, NoAttr => 1, RootName => 'response', XMLDecl => 1);

