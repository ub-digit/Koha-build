#!/usr/bin/perl

use strict;
use warnings;

use CGI qw ( -utf8 );
use C4::Auth qw/check_api_auth/;
use C4::Members;
use C4::Members::Attributes qw( GetBorrowerAttributeValue );
use Koha::Patrons;
use XML::Simple;
use Data::Dumper;                                                           # DEBUG

my $query = new CGI;
binmode STDOUT, ':encoding(UTF-8)';
print "Content-type: text/plain\n\n";

# -------------------------------------------------- #
# in-params are 'pnr' and 'bar'. They are used as    #
# 'personalnumber' and 'cardnumber', to correspond   #
# with "sister" script auth_offpc                    #
# -------------------------------------------------- #
my $cardnumber= $query->url_param('bar');
my $personalnumber = $query->url_param('pnr');

# -------------------------------------------------- #
# lack of username                                   #
# -------------------------------------------------- #
unless ($cardnumber) {
    print "-1";
    exit 0;
}
# -------------------------------------------------- #
# lack of password                                   #
# -------------------------------------------------- #
unless ($personalnumber) {
    print "-1";
    exit 0;
}
my $patrons = Koha::Patrons->search({cardnumber => $cardnumber});
my $borrower = $patrons->next;
# -------------------------------------------------- #
# wrong cardnumber                                   #
# -------------------------------------------------- #
unless ($borrower) {
    print "-1";
    exit 0;
}

my $borrowernumber = $borrower->unblessed->{'borrowernumber'};
my $dateexpiry     = $borrower->unblessed->{'dateexpiry'};
my $categorycode   = $borrower->unblessed->{'categorycode'};
my $retval;

# -------------------------------------------------- #
# 'personnummer' might be stored as 10 or 12 digits  #
# -------------------------------------------------- #
my $pnr12 = GetBorrowerAttributeValue($borrowernumber, "PNR12");
my $pnr = GetBorrowerAttributeValue($borrowernumber, "PNR");

open (OUTFILE, ">>/tmp/auth_booking.out");                                  # DEBUG
my $today = `date +"%Y-%m-%d"`;

# -------------------------------------------------- #
# personalnumber must correspond to either variant   #
# -------------------------------------------------- #
if (!(
        ($pnr12 and (($personalnumber eq $pnr12) or ($personalnumber eq substr($pnr12, 2)))) or
        ($pnr   and (($personalnumber eq $pnr) or (substr($personalnumber, 2) eq $pnr)))))
                                                            { $retval = "-1";  }  # given credentials does not match with database
elsif ($dateexpiry < $today)                                { $retval = '-1';  }  # card is expired
elsif ($categorycode eq 'PE')                               { $retval = "110"; }  # GUB-personal
elsif ($categorycode=~m/(SY)|(FY)/ )                        { $retval = "101"; }  # students/researchers with     special authorization
elsif ($categorycode=~m/(F[AEHIKLMNSTVX])|(S[AEHIKLMNSU])/) { $retval = "100"; }  # students/researchers without  special authorization
else                                                        { $retval =  "-1"; }  # all other cases
print $retval;
# -------------------------------------------------- #                      # DEBUG
# DEBUG                                              #                      # DEBUG
# -------------------------------------------------- #                      # DEBUG
print OUTFILE "borrowernumber :$borrowernumber:\n";                         # DEBUG
print OUTFILE "dateexpiry     :$dateexpiry:    \n";                         # DEBUG
print OUTFILE "today          :$today          \n";                         # DEBUG
print OUTFILE "categorycode   :$categorycode:  \n";                         # DEBUG
print OUTFILE "pnr            :$pnr:           \n";                         # DEBUG
print "\nborrowernumber :$borrowernumber:\n";                               # DEBUG
print "dateexpiry     :$dateexpiry:    \n";                                 # DEBUG
print "today          :$today    \n";                                       # DEBUG
print "categorycode   :$categorycode:  \n";                                 # DEBUG
print "pnr            :$pnr:           \n";                                 # DEBUG
close OUTFILE;                                                              # DEBUG
# -------------------------------------------------- #                      # DEBUG
# DEBUG end                                          #                      # DEBUG
# -------------------------------------------------- #                      # DEBUG


exit 0;
