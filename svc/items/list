#!/usr/bin/perl

use strict;
use warnings;
use utf8;

use CGI qw ( -utf8 );
use JSON;
use C4::Auth qw/check_api_auth/;
use C4::Items;
use C4::Context;
use Data::Dumper;

my $query = new CGI;

my ($status, $cookie, $sessionID) = check_api_auth($query, { editcatalogue => 'edit_catalogue'} );
unless ($status eq "ok") {
  print $query->header(-type => 'text/json', -status => '403 Forbidden');
  print encode_json({status => $status});
  exit 0;
}

my $biblionumber = $query->param('biblionumber');

unless ($biblionumber) {
  print $query->header(-type => 'text/json', -status => '400');
  print encode_json({status => 'Biblionumber is required', error_code => 'biblionumberIsMissing'});
  exit 0;
}

my @items = C4::Items::GetItemsInfo( $biblionumber );

my $itemnumbers = join(',', (map { $_->{'itemnumber'} } @items));

my $dbh = C4::Context->dbh();
my $sql;
my $in_transit_items;

if ($itemnumbers) {
  $sql = "SELECT itemnumber FROM branchtransfers WHERE datearrived IS NULL AND itemnumber IN (" . $itemnumbers .")";
  $in_transit_items = $dbh->selectcol_arrayref($sql, undef);
}
else {
  $in_transit_items = [];
}

my @new_items = map {
  my $item = $_;
    (grep { /$item->{'itemnumber'}/ } @$in_transit_items ) ? {%{$item},'in_transit'=>"1"} : {%{$item},'in_transit'=>"0"}
} @items;

print $query->header(-type => 'text/json',-charset => 'utf-8');
print encode_json({items => \@new_items});
exit 0;
